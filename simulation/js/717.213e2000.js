"use strict";(self["webpackChunkexp_6"]=self["webpackChunkexp_6"]||[]).push([[717],{1717:function(a,t,e){e.r(t),e.d(t,{default:function(){return x}});var n=e(3396),i=e(9242);const l=a=>((0,n.dD)("data-v-742c3880"),a=a(),(0,n.Cn)(),a),o=l((()=>(0,n._)("header",{style:{padding:"20px"}},[(0,n._)("h5",null,"HELP"),(0,n._)("h1",null,"Creating Arrays")],-1))),r=l((()=>(0,n._)("div",{id:"snackbar"},"Some text some message..",-1))),d={class:"flex-row"},s=(0,n.uE)('<div style="width:30%;" data-v-742c3880><h2 data-v-742c3880>Theory</h2><div class="outbox" data-v-742c3880><p data-v-742c3880>int a[]=new int[4];</p><span id="comment" data-v-742c3880>//variable declaration and instantiation</span><p data-v-742c3880>a[0]=33</p><p data-v-742c3880>a[1]=6</p><p data-v-742c3880>a[2]=22</p><p data-v-742c3880>a[3]=3</p><span id="comment" data-v-742c3880>//variable initialization</span><p data-v-742c3880>int b[]={22,4,5,6};</p><span id="comment" data-v-742c3880>//variable declaration and initialization of singledimentional</span><p data-v-742c3880>int arr[][]={ {1,2,3},{2,4,5},{4,4,5} };</p><span id="comment" data-v-742c3880>//variable declaration and initialization of multidimentional</span><br data-v-742c3880></div><div class="content" data-v-742c3880><p data-v-742c3880> Array is a collection of elements of the same data type. An array has a fixed size .To declare an array you need to specify the data type of the elements it will hold and the number of elements it will contain. </p></div></div>',1),c={style:{width:"70%"}},u=l((()=>(0,n._)("h2",null,"Try it yourself",-1))),p={class:"outbox"},m=l((()=>(0,n._)("br",null,null,-1))),v=l((()=>(0,n._)("br",null,null,-1))),h=l((()=>(0,n._)("span",{id:"comment"},'//Declare a singledimentional array "key" of type float with size 5',-1))),y=l((()=>(0,n._)("br",null,null,-1))),f={id:"buttons",class:"relative"},_={key:0,class:"navitem"};function b(a,t,e,l,b,w){return(0,n.wg)(),(0,n.iD)(n.HY,null,[o,r,(0,n._)("main",null,[(0,n._)("div",d,[s,(0,n._)("div",c,[u,(0,n._)("div",p,[(0,n.wy)((0,n._)("input",{type:"text","onUpdate:modelValue":t[0]||(t[0]=t=>a.one=t)},null,512),[[i.nr,a.one]]),(0,n.Uk)(),(0,n.wy)((0,n._)("input",{type:"text","onUpdate:modelValue":t[1]||(t[1]=t=>a.two=t)},null,512),[[i.nr,a.two]]),(0,n.Uk)(" = "),(0,n.wy)((0,n._)("input",{type:"text","onUpdate:modelValue":t[2]||(t[2]=t=>a.three=t)},null,512),[[i.nr,a.three]]),(0,n.Uk)(),(0,n.wy)((0,n._)("input",{type:"text","onUpdate:modelValue":t[3]||(t[3]=t=>a.four=t)},null,512),[[i.nr,a.four]]),(0,n.Uk)("; "),m,v,h,y]),(0,n._)("button",{class:"button-9",onClick:t[4]||(t[4]=a=>w.validate_one())},"Validate")])]),(0,n._)("footer",null,[(0,n._)("div",f,[1===a.currentStep?((0,n.wg)(),(0,n.iD)("button",_,"Next")):(0,n.kq)("",!0)])])])],64)}var w={data(){return{}},methods:{incorrect(a){var t=document.getElementById("snackbar");t.innerHTML=a,t.style.backgroundColor="red",t.className="show",setTimeout((function(){t.className=t.className.replace("show","")}),3e3)},correct1(){var a=document.getElementById("snackbar");a.innerHTML="Correct",a.style.backgroundColor="green",a.className="show",setTimeout((function(){a.className=a.className.replace("show","")}),3e3)},validate_one(){"float"==this.one.trim()&&"key[]"==this.two.trim()&&"new"==this.three.trim()&&"float[5]"==this.four.trim()?(this.correct1(),alert("Correct ")):(this.incorrect("Try again"),alert("Incorrect, please try again"))}}},k=e(89);const g=(0,k.Z)(w,[["render",b],["__scopeId","data-v-742c3880"]]);var x=g}}]);
//# sourceMappingURL=717.213e2000.js.map